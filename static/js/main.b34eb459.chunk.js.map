{"version":3,"sources":["components/layout/Header.js","components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","branding","react_default","a","createElement","className","react_router_dom","to","defaultProps","Contact","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onShowClick","e","setState","showContactInfo","state","onDeleteClick","id","deleteContact","_this$props$contact","contact","name","email","phone","onClick","style","cursor","float","color","bind","concat","marginRight","Component","connect","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","wrap","_context3","prev","next","axios","delete","type","payload","t0","stop","_x3","apply","arguments","Contacts","getContacts","contacts","react","map","contacts_Contact","key","_callee","res","_context","get","sent","data","_x","About","match","params","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","preventDefault","_this$state","newContact","uuid","addContact","history","push","_this$state2","layout_TextInputGroup","_ref4","_callee4","_context4","post","_x4","NotFound","initialState","combineReducers","length","undefined","action","objectSpread","filter","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","EditContact","updateContact","abrupt","getContact","nextProps","nextContext","_nextProps$contact","_ref2","_callee2","_context2","_x2","_ref5","_callee5","_context5","put","_x5","App","es","basename","process","layout_Header","react_router","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b34eb459.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\n\nconst Header = ({branding}) => {\n  return (\n    <nav className=\"navbar navbar-expand-sm\n        navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"/>Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"/>Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"/>About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\nexport default Header;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {deleteContact} from \"../../actions/contactActions\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showContactInfo: false\n    };\n  }\n\n  onShowClick = e => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n  onDeleteClick = (id) => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const {id, name, email, phone} = this.props.contact;\n    const {showContactInfo} = this.state;\n    return (<div className=\"card card-body mb-3\">\n      <h4>\n        {name}{' '}\n        <i\n          onClick={this.onShowClick}\n          className=\"fas fa-sort-down\"\n          style={{cursor: \"pointer\"}}\n        />\n        <i className=\"fas fa-times\"\n           style={{cursor: \"pointer\", float: \"right\", color: \"red\"}}\n           onClick={this.onDeleteClick.bind(this, id)}\n        />\n        <Link to={`contact/edit/${id}`}>\n          <i className=\"fas fa-pencil-alt\"\n             style={{cursor: \"pointer\", float: \"right\", color: \"black\", marginRight: '1rem'}}/>\n        </Link>\n      </h4>\n      {showContactInfo &&\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">email : {email}</li>\n        <li className=\"list-group-item\">phone : {phone}</li>\n      </ul>}\n    </div>);\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {deleteContact})(Contact);","import {ADD_CONTACT, DELETE_CONTACT, GET_CONTACT, GET_CONTACTS, UPDATE_CONTACT} from \"./types\";\nimport axios from \"axios\";\n\nexport const getContacts = () => async (dispatch) => {\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/users`);\n  dispatch({\n    type: GET_CONTACTS,\n    payload: res.data\n  });\n};\nexport const getContact = (id) => async (dispatch) => {\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n  dispatch({\n    type: GET_CONTACT,\n    payload: res.data\n  });\n};\nexport const deleteContact = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  } catch (e) {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }\n};\nexport const addContact = (contact) => async (dispatch) => {\n  let res = await axios.post(`https://jsonplaceholder.typicode.com/users`, contact);\n  dispatch({\n    type: ADD_CONTACT,\n    payload: res.data\n  });\n};\nexport const updateContact = (contact) => async (dispatch) => {\n  let res = await axios.put(`https://jsonplaceholder.typicode.com/users/${contact.id}`, contact);\n  dispatch({\n    type: UPDATE_CONTACT,\n    payload: res.data\n  });\n};","export const GET_CONTACTS = 'GET_CONTACTS';\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const GET_CONTACT = 'GET_CONTACT';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';","import React, {Component, Fragment} from 'react';\nimport Contact from \"./Contact\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getContacts} from \"../../actions/contactActions\";\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const {contacts} = this.props;\n    return (\n      <Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact =>\n          <Contact\n            key={contact.id}\n            contact={contact}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contact.contacts,\n});\nexport default connect(mapStateToProps, {getContacts})(Contacts);\n","import React from 'react';\n\nconst About = props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">{props.match.params.id}About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input type={type}\n             name={name}\n             className={classnames('form-control form-control-lg', {\n               'is-invalid': error\n             })}\n             placeholder={placeholder}\n             value={value}\n             onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">This is wrong</div>}\n    </div>\n  );\n};\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\nexport default TextInputGroup;\n","import React, {Component} from 'react';\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport uuid from 'uuid';\nimport {addContact} from \"../../actions/contactActions\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {name, email, phone} = this.state;\n    if (name === '') {\n      this.setState({\n        errors: {name: 'Name is required'}\n      });\n      return;\n    }\n    if (email === '') {\n      this.setState({\n        errors: {email: 'Email  is required'}\n      });\n      return;\n    }\n    if (phone === '') {\n      this.setState({\n        errors: {phone: 'Phone is required'}\n      });\n      return;\n    }\n\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone\n    };\n    this.props.addContact(newContact);\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n    this.props.history.push('/');\n  };\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit.bind(this)}>\n            <TextInputGroup\n              label={\"Name\"}\n              name={\"name\"}\n              placeholder={\"Enter Name...\"}\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label={\"Email\"}\n              onChange={this.onChange}\n              value={email}\n              placeholder={\"Enter Email...\"}\n              name={\"email\"}\n              type={\"email\"}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label={\"Phone\"}\n              onChange={this.onChange}\n              value={phone}\n              type={\"tel\"}\n              placeholder={\"Enter Phone...\"}\n              name={\"phone\"}\n              error={errors.phone}\n            />\n            <input type=\"submit\"\n                   value=\"Add Contact\"\n                   className=\"btn btn-light btn-block\"/>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\nexport default connect(null, {addContact})(AddContact);","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;","import {ADD_CONTACT, DELETE_CONTACT, GET_CONTACT, GET_CONTACTS, UPDATE_CONTACT} from '../actions/types';\n\nconst initialState = {\n  contact: {},\n  contacts: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload\n      };\n    case GET_CONTACT:\n      return {\n        ...state,\n        contact: action.payload\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from \"redux\";\nimport contactReducer from './contactReducer';\n\nexport default combineReducers({\n  contact: contactReducer,\n});\n","import {applyMiddleware, compose, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers';\n\n\nconst initialState = {};\nconst middleware = [thunk];\n\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ));\nexport default store;\n","import React, {Component} from 'react';\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport {connect} from \"react-redux\";\nimport {getContact, updateContact} from \"../../actions/contactActions\";\nimport PropTypes from \"prop-types\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  componentDidMount() {\n    const {id} = this.props.match.params;\n    this.props.getContact(id);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    const {name, email, phone} = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone\n    });\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const {name, email, phone} = this.state;\n    if (name === '') {\n      this.setState({\n        errors: {name: 'Name is required'}\n      });\n      return;\n    }\n    if (email === '') {\n      this.setState({\n        errors: {email: 'Email  is required'}\n      });\n      return;\n    }\n    if (phone === '') {\n      this.setState({\n        errors: {phone: 'Phone is required'}\n      });\n      return;\n    }\n    const {id} = this.props.match.params;\n    \n    const updateContact = {\n      id,\n      name,\n      email,\n      phone\n    };\n    this.props.updateContact(updateContact);\n    this.props.history.push('/');\n  };\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit.bind(this)}>\n            <TextInputGroup\n              label={\"Name\"}\n              name={\"name\"}\n              placeholder={\"Enter Name...\"}\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label={\"Email\"}\n              onChange={this.onChange}\n              value={email}\n              placeholder={\"Enter Email...\"}\n              name={\"email\"}\n              type={\"email\"}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label={\"Phone\"}\n              onChange={this.onChange}\n              value={phone}\n              type={\"tel\"}\n              placeholder={\"Enter Phone...\"}\n              name={\"phone\"}\n              error={errors.phone}\n            />\n            <input type=\"submit\"\n                   value=\"Update Contact\"\n                   className=\"btn btn-light btn-block\"/>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  getContact: PropTypes.func.isRequired,\n  updateContact: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  contact: state.contact.contact,\n});\n\nexport default connect(mapStateToProps, {getContact, updateContact})(EditContact);","import React, {Component} from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport About from \"./components/pages/About\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport NotFound from \"./components/pages/NotFound\";\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding={\"Contact Manager\"}/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path={\"/\"} component={Contacts}/>\n                <Route exact path={\"/contact/add\"} component={AddContact}/>\n                <Route exact path={\"/contact/edit/:id\"} component={EditContact}/>\n                <Route exact path={\"/about/:id\"} component={About}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}