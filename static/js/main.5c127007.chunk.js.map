{"version":3,"sources":["context.js","components/layout/Header.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","then","data","sent","stop","react_default","createElement","props","children","Component","Consumer","Header","_ref","branding","className","react_router_dom","to","defaultProps","Contact","onShowClick","e","showContactInfo","onDeleteClick","delete","t0","_x","_x2","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","react","contacts_Contact","About","match","params","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","NotFound","EditContact","updateContact","put","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c127007.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact =>\n          contact.id !== action.payload)\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload,\n          ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state =>\n      reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => res.data);\n\n    this.setState({\n      contacts: res\n    });\n\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\n\nconst Header = ({branding}) => {\n  return (\n    <nav className=\"navbar navbar-expand-sm\n        navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"/>Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"/>Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"/>About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\nexport default Header;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Consumer} from \"../../context\";\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showContactInfo: false\n    };\n  }\n\n  onShowClick = e => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    } catch (e) {\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    }\n  };\n\n  render() {\n    const {id, name, email, phone} = this.props.contact;\n    const {showContactInfo} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const {dispatch} = value;\n          return (<div className=\"card card-body mb-3\">\n            <h4>\n              {name}{' '}\n              <i\n                onClick={this.onShowClick}\n                className=\"fas fa-sort-down\"\n                style={{cursor: \"pointer\"}}\n              />\n              <i className=\"fas fa-times\"\n                 style={{cursor: \"pointer\", float: \"right\", color: \"red\"}}\n                 onClick={this.onDeleteClick.bind(this, id, dispatch)}\n              />\n              <Link to={`contact/edit/${id}`}>\n                <i className=\"fas fa-pencil-alt\"\n                   style={{cursor: \"pointer\", float: \"right\", color: \"black\", marginRight: '1rem'}}/>\n              </Link>\n            </h4>\n            {showContactInfo &&\n            <ul className=\"list-group\">\n              <li className=\"list-group-item\">email : {email}</li>\n              <li className=\"list-group-item\">phone : {phone}</li>\n            </ul>}\n          </div>)\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default Contact;","import React, {Component, Fragment} from 'react';\nimport Contact from \"./Contact\";\nimport {Consumer} from \"../../context\";\n\nclass Contacts extends Component {\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      contacts: []\n    }\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const {contacts} = value;\n          return (\n            <Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact =>\n                <Contact\n                  key={contact.id}\n                  contact={contact}\n                />\n              )}\n            </Fragment>\n          )\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\n\nconst About = props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">{props.match.params.id}About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input type={type}\n             name={name}\n             className={classnames('form-control form-control-lg', {\n               'is-invalid': error\n             })}\n             placeholder={placeholder}\n             value={value}\n             onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">This is wrong</div>}\n    </div>\n  );\n};\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\nexport default TextInputGroup;\n","import React, {Component} from 'react';\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const {name, email, phone} = this.state;\n    if (name === '') {\n      this.setState({\n        errors: {name: 'Name is required'}\n      });\n      return;\n    }\n    if (email === '') {\n      this.setState({\n        errors: {email: 'Email  is required'}\n      });\n      return;\n    }\n    if (phone === '') {\n      this.setState({\n        errors: {phone: 'Phone is required'}\n      });\n      return;\n    }\n\n    const newContact = {\n      name: name,\n      email,\n      phone\n    };\n    let res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact);\n    dispatch({type: 'ADD_CONTACT', payload: res.data});\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n    this.props.history.push('/');\n  };\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const {dispatch} = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label={\"Name\"}\n                    name={\"name\"}\n                    placeholder={\"Enter Name...\"}\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label={\"Email\"}\n                    onChange={this.onChange}\n                    value={email}\n                    placeholder={\"Enter Email...\"}\n                    name={\"email\"}\n                    type={\"email\"}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label={\"Phone\"}\n                    onChange={this.onChange}\n                    value={phone}\n                    type={\"tel\"}\n                    placeholder={\"Enter Phone...\"}\n                    name={\"phone\"}\n                    error={errors.phone}\n                  />\n                  <input type=\"submit\"\n                         value=\"Add Contact\"\n                         className=\"btn btn-light btn-block\"/>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;","import React, {Component} from 'react';\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  async componentDidMount() {\n    const {id} = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const {name, email, phone} = this.state;\n    if (name === '') {\n      this.setState({\n        errors: {name: 'Name is required'}\n      });\n      return;\n    }\n    if (email === '') {\n      this.setState({\n        errors: {email: 'Email  is required'}\n      });\n      return;\n    }\n    if (phone === '') {\n      this.setState({\n        errors: {phone: 'Phone is required'}\n      });\n      return;\n    }\n\n    const {id} = this.props.match.params;\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n\n    let res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n    this.props.history.push('/');\n  };\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const {dispatch} = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label={\"Name\"}\n                    name={\"name\"}\n                    placeholder={\"Enter Name...\"}\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label={\"Email\"}\n                    onChange={this.onChange}\n                    value={email}\n                    placeholder={\"Enter Email...\"}\n                    name={\"email\"}\n                    type={\"email\"}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label={\"Phone\"}\n                    onChange={this.onChange}\n                    value={phone}\n                    type={\"tel\"}\n                    placeholder={\"Enter Phone...\"}\n                    name={\"phone\"}\n                    error={errors.phone}\n                  />\n                  <input type=\"submit\"\n                         value=\"Update Contact\"\n                         className=\"btn btn-light btn-block\"/>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;","import React, {Component} from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from \"./context\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport About from \"./components/pages/About\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport NotFound from \"./components/pages/NotFound\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding={\"Contact Manager\"}/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path={\"/\"} component={Contacts}/>\n                <Route exact path={\"/contact/add\"} component={AddContact}/>\n                <Route exact path={\"/contact/edit/:id\"} component={EditContact}/>\n                <Route exact path={\"/about/:id\"} component={About}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}